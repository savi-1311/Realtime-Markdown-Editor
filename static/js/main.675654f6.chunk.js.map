{"version":3,"sources":["components/MarkdownSanitized.js","components/RawInputArea.js","App.js","reportWebVitals.js","index.js"],"names":["MarkdownSanitized","props","React","useState","className","allowDangerousHtml","value","RawInputArea","localStorage","getItem","textAreaValue","setValue","onChange","event","target","setItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAmBeA,MAff,SAA2BC,GAAQ,IAAD,EACCC,IAAMC,SAAS,SADhB,mBAOhC,OAPgC,UAQ9B,sBAAKC,UAAU,YAAf,UACA,qBAAKA,UAAU,UAAf,8BACA,qBAAKA,UAAU,UAAf,SAAyB,cAAC,IAAD,CAAeC,oBAAkB,EAAjC,SAAmCJ,EAAMK,cCVvD,SAASC,IAAgB,IAAD,EACJL,IAAMC,SAASK,aAAaC,QAAQ,kBADhC,mBAC/BC,EAD+B,KAChBC,EADgB,KAQrC,OACC,sBAAKP,UAAU,UAAf,UACC,sBAAKA,UAAU,YAAf,UACA,qBAAKA,UAAU,QAAf,sBACA,qBAAKA,UAAU,OAAf,gBACA,qBAAKA,UAAU,QAAf,8BACA,qBAAKA,UAAU,UAAf,yBACA,8BAAK,0BAAUQ,SAZE,SAACC,GACpBF,EAASE,EAAMC,OAAOR,OACtBE,aAAaO,QAAQ,gBAAiBF,EAAMC,OAAOR,QAUVA,MAAOI,SAE9C,cAAC,EAAD,CAAmBJ,MAASI,OCXjBM,MAPf,WACE,OACE,cAACT,EAAD,KCOWU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.675654f6.chunk.js","sourcesContent":["import React ,{ Component } from 'react';\nimport './Styles.css';\nimport ReactMarkdown from 'react-markdown';\n\nfunction MarkdownSanitized(props) {\n\tconst [textAreaValue, setValue] = React.useState(\"Hello\");\n\nconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n  }\n\n  return (\n    <div className=\"container\">\n    <div className=\"heading\">Markdown Output:</div>\n    <div className=\"content\"><ReactMarkdown allowDangerousHtml>{props.value}</ReactMarkdown></div>\n    </div>\n    );\n}\n\nexport default MarkdownSanitized;\n\n","import './Styles.css';\nimport React ,{ Component } from 'react';\nimport MarkdownSanitized from './MarkdownSanitized.js';\n\nexport default function RawInputArea() {\n\tconst [textAreaValue, setValue] = React.useState(localStorage.getItem('textAreaValue'));\n\nconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t\tlocalStorage.setItem('textAreaValue', event.target.value);\n  }\n\n  return (\n  \t<div className=\"wrapper\">\n    <div className=\"container\">\n    <div className=\"logo2\">Realtime</div>\n    <div className=\"logo\">ME</div>\n    <div className=\"logo2\">Markdown Editor!</div>\n    <div className=\"heading\">Input Here:</div>\n    <div><textarea onChange={handleChange} value={textAreaValue}/></div>\n    </div>\n    <MarkdownSanitized value = {textAreaValue}/>\n    </div>\n    );\n}\n\n","import './App.css';\nimport RawInputArea from './components/RawInputArea.js';\n\nfunction App() {\n  return (\n    <RawInputArea/>\n    \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}